{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","refresh","setRefresh","useEffect","axios","get","then","resp","console","log","actual","Math","floor","random","className","url","src","alt","date","title","explanation","href","hdurl","target","rel","type","color","height","width","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAsDeA,MAhDf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNC,EADM,KACDC,EADC,OAEgBF,oBAAS,GAFzB,mBAENG,EAFM,KAEEC,EAFF,KAoBb,OAZCC,qBAAU,WACJF,GACHG,IAAMC,IAAI,iGAAiGC,MAAK,SAACC,GAC/GC,QAAQC,IAAI,aAAaF,EAAKR,MAC9B,IACMW,EADOH,EAAKR,KACEY,KAAKC,MAAM,EAAAD,KAAKE,WACpCX,GAAW,GACXF,EAAQU,QAIX,CAACX,EAAKE,IAEP,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACGf,EAAKgB,IAAM,qCACZ,qBAAKC,IAAKjB,EAAKgB,IAAKD,UAAU,WAAWG,IAAI,SAC7C,wCAAWlB,EAAKmB,QAChB,6BAAKnB,EAAKoB,QACV,qBAAKL,UAAU,uBAAf,SACE,6BAAKf,EAAKqB,gBAGZ,mBACEN,UAAU,WACVO,KAAMtB,EAAKuB,MACXC,OAAO,SACPC,IAAI,sBAJN,yBAQM,cAAC,IAAD,CAAQC,KAAK,YAAYC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAEnE,cAAC,IAAD,CAAcd,UAAU,OAAOe,QAAS,WApC5C7B,EAAQ,IACRE,GAAW,YCAA4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cf4f872d.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect,React,useState} from \"react\"\nimport axios from \"axios\";\nimport { FiRefreshCcw } from \"react-icons/fi\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nfunction App() {\n  const [data,setData] = useState({})\n  const [refresh,setRefresh] = useState(false)\n\n  const clear = () =>{\n    setData({})\n    setRefresh(false);\n  }\n   useEffect(()=>{\n     if(!refresh){\n      axios.get('https://api.nasa.gov/planetary/apod?api_key=ozSpCX7pheJqLT0Z4SCq9mBU5ef2PmfoRkPPhNhx&count=10').then((resp)=>{\n        console.log(\"Llegue con\",resp.data)\n        const data = resp.data;\n        const actual = data[Math.floor(Math.random() * (9 - 0))]\n        setRefresh(true)\n        setData(actual)\n        \n      })\n     }\n   },[data,refresh])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {data.url?( <> \n        <img src={data.url} className=\"App-logo\" alt=\"logo\" /> \n        <h6>Date: {data.date}</h6>\n        <h2>{data.title}</h2>\n        <div className=\"containerDescription\">\n          <h4>{data.explanation}</h4>\n        </div>\n        \n        <a\n          className=\"App-link\"\n          href={data.hdurl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Photo HD\n        </a>\n        </>):(<Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />)}\n      \n        <FiRefreshCcw className=\"icon\" onClick={()=>{clear()}}/>\n      </header>\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}